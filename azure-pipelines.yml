# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# This is an example of using VeraDemo Java test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.
trigger:
- main
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: Maven@3
  displayName: Build with Maven
  inputs:
    mavenPomFile: 'app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: Bash@3
  displayName: Veracode CLI SCA & SBOM Generation
  
  inputs:
    targetType: inline
    script: |
      pwd
      #export VERACODE_API_KEY_ID=$(VERACODE_API_ID)
      #export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY)
      #echo $VERACODE_API_KEY_ID
      curl -fsS https://tools.veracode.com/veracode-cli/install | sh
      ./veracode version
      ./veracode configure << $($(VERACODE_API_ID))
      $($(VERACODE_API_KEY))
      ./veracode scan --source https://github.com/Samab1995/example-ruby --type repo --format table

- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode API'
    veracodeAppProfile: 'Testing_New_Build'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    sandboxName: 'Azure_Build_Test'
    createSandBox: true
    createProfile: true
    failBuildIfUploadAndScanBuildStepFails: true
    importResults: true
    failBuildOnPolicyFail: true
    maximumWaitTime: '60'